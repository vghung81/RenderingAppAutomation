package com.smi.RenderingApp.RenderingApp;

import org.testng.annotations.Test;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterMethod;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
public class Login {  
	WebDriver driver;
  @Test
  public void LoginWithValidCredential() {
	  

    
      // Enter Username on the element found by above desc.
 
      driver.findElement(By.id("user_name")).sendKeys("hung@speechmorphing.com");
 
      // Find the element that's ID attribute is 'pwd' (Password)
 
      // Enter Password on the element found by the above desc.
 
      driver.findElement(By.id("password")).sendKeys("abc123");
 
      // Now submit the form. WebDriver will find the form for us from the element
 
      driver.findElement(By.id("SubmitButtonLogin")).click();
 
      // Print a Log In message to the screen
 
      System.out.println(" Login Successfully, now it is the time to Log Off buddy.");
 
	  
  }
  @BeforeMethod
  public void beforeMethod() {
	  
	// Create a new instance of the Firefox driver
	  System.setProperty("webdriver.firefox.marionette", "./Packages/geckodriver-v0.15.0-win64/geckodriver.exe");
      driver = new FirefoxDriver ();
 
      //Put a Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception
 
      driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
 
      //Launch the Online Store Website
 
      driver.get("http://10.1.10.22:8080/RenderingApp/");
  }

  @AfterMethod
  public void afterMethod() {
  }

}
